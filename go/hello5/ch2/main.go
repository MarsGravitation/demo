package main

import (
	"log"
	"os"
)

/*
	main 函数保存在名为 main 的包里。如果 main 函数不在 main 包里，构建工
具就不会生成可执行文件。
	Go 语言的每个代码文件都属于一个包，main.go 也不例外。一个包定义一组编译
过的代码，包的名字类似命名空间，可以用来间接访问包内声明的标识符。这个特性可以
把不同包中定义的同名标识符区别开。
	import 就是导入一段代码，让用户可以访问其中的标识符，如类型、函数、常量和
接口。
	所有处于同一个文件夹里的代码，必须使用同一个包名。按照惯例，包和文件夹
同名。
	_ 是为了让 Go 语言对包做初始化操作，但是并不使用包里的标识符。为了让程序的
可读性更强，Go 编译器不允许声明导入某个包缺不使用。下划线让编译器接受这类导入，并且
调用对应包内的所有代码文件里定义的 init 函数。
	程序中每个代码文件里的 init 函数都会在 main 函数执行前调用。
*/

// init 在 main 之前调用
func init() {
	// 将日志输出到标准输出
	log.SetOutput(os.Stdout)
}

// main 是整个程序的入口
func main() {
	// 使用特定的项做搜索
	search.Run("president")
}
